//RTable.js-—Ç–∞–±–ª–∏—Ü—è:–ø–æ—à—É–∫(—Ñ—ñ–ª—å—Ç—Ä) –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö/—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è/select.
//Select: selectedRows- –º–∞—Å–∏–≤ —ñ–Ω–¥–µ–∫—Å—ñ–≤(_nrow) –≤–∏–±—Ä–∞–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤  )
//==== –Ω–∞ –±–∞–∑—ñ RTable.js==========================================================
//https://flowbite.com/docs/components/tables/#striped-rows\\Table pagination
//Creating a React sortable table //https://blog.logrocket.com/creating-react-sortable-table/
//---
//https://dev.to/franciscomendes10866/react-basic-search-filter-1fkh
//Step-by-Step Guide: Building a Simple Search Filter with React
//--------------------------------------------------------------------

// –ü–æ–ª—è –∑–∞–¥–∞—é—Ç—å—Å—è –≤ const initial–°olumns = [
//  {label: "–®—Ç—Ä–∏—Ö–ö–æ–¥", //–©–æ –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—å –≤ –∑–∞–≥–æ–ª–æ–≤–∫—É <th>
//   accessor: "skod",//-–∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ë–î, (–Ø–∫—â–æ accessor: "index", —Ç–æ —ñ–¥–µ –Ω—É–º–µ—Ä–∞—Ü—ñ—è —Ä—è–¥–∫—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤—ñ index)
//   type: "date", //–î–ª—è —Ñ—ñ–ª—å—Ç—Ä—É —ñ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—é –≤ —Ä—è–¥–∫—É(string-–≤–ª—ñ–≤–æ, numeric-–≤–ø—Ä–∞–≤–æ,date-–ø–æ —Ü–µ–Ω—Ç—É)
//   sortable: true,//—á–∏ –±—É–¥–µ —Å–æ—Ä—Ç—É–≤–∞—Ç–∏—Å—å –∫–æ–ª–æ–Ω–∫–∞
//   filtered: true,//—á–∏ –±—É–¥–µ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏—Å—å
//   align: "center",//–î–æ–¥–ø—Ç–∫–æ–≤–µ –≤–∏—Ä—ñ–≤–Ω–±–≤–∞–Ω–Ω—è –≤ —Å—Ç—Å—Ç–æ–≤–±—Ü—é(–º–∞—î –ø–µ—Ä–µ–≤–∞–≥—É –Ω–∞–¥ type)
//   minWith: "100px",//–©–µ –Ω–µ –ø—Ä–ø—Ü—é—î
//   With: "200px",}//–©–µ –Ω–µ –ø—Ä–ø—Ü—é—î
// ];
//     { label: "–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É"-–ó–∞–≥–æ–ª–æ–≤–æ–∫
//       accessor: "name"-–∑–Ω–∞—á–µ–Ω–Ω—è –∑ data,
//       sortable: true- —á–∏ –±—É–¥–µ —Å–æ—Ä—Ç—É–≤–∞—Ç–∏—Å—å –∫–æ–ª–æ–Ω–∫–∞
//       with: "200px"-???
//
//—Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è/
//  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è className –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è(bg-color+bg-icon)
// 20231105-—Ñ—ñ–∫—Å–æ–≤–∞–Ω—ñ <thead> i <tfoot> –∑ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏–º —Å–∫—Ä–æ–ª–æ–º
// –¢–∞–±–ª–∏—Ü—è –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º —ñ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–∏–º —Ç—ñ–ª–æ–º//https://www.w3docs.com/snippets/html/how-to-create-a-table-with-a-fixed-header-and-scrollable-body.html
// <th colspan="2">-–æ–±—î–¥–Ω–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–æ–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–∫—É —ñ tfoot
// 20231110 //–ü–æ–¥—ñ–ª –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏:–≤–∏–±—ñ—Ä –∫-—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ/–ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –ø–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö
// - TableFooter.js,useTable.js://https://dev.to/franciscomendes10866/how-to-create-a-table-with-pagination-in-react-4lpd
//  - —ñ–Ω—Ñ–∞: —è–∫—ñ —Ä—è–¥–∫–∏ –∑–∞—Ä–∞–∑ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —ñ —Ä—è–¥–∫—ñ–≤ –≤—Å—å–æ–≥–æ
// 20231111 // –≤–∏–±—ñ—Ä —à—Ä–∏—Ñ—Ç—ñ—Ñ —Ç–∞–±–ª–∏—Ü—ñ (T)
// 20231114 // –í–∏–¥–∞–ª–∏–≤ –∑ —Ç–∞–±–ª–∏—Ü—ñ select ( —Ç–µ–ø–µ—Ä –≤–∏–¥—ñ–¥–µ–Ω–Ω—è  —Ü—ñ–ª–∏–º —Ä—è–¥–∫–æ–º)
// 20231117 // –©–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫ –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö(–æ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è,–ø–æ—à—É–∫–æ–≤–∏–π —Ä—è–¥–æ–∫)/–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–∏ —Å—Ç–∏—Ä–∞–Ω–Ω—ñ —É —Ä—è–¥–∫—É/ –ü—Ä–∞—Ü—é—î —Ä–∞–∑–æ–º –∑ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è–º
// 20231120 // –î–æ–±–∞–≤–∏–≤ –≤—ñ–∫–Ω–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –ø–æ –∑–∞–¥–∞–Ω–∏—Ö –ø–æ–ª—è—Ö:DropdownFilter.js+DroopFifterForm.js
// 20231127 // –§—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –ø–æ –±–∞–≥–∞—Ç—å–æ—Ö –ø–æ–ª—è—Ö/–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ë–î –¥–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è/ –ü—Ä–∏ —Ñ—ñ–≤–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—ñ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –¥–∞–Ω—ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—é—Ç—å—Å—è —É —Ç—ñ —Ç–∏–ø–∏, —è–∫—ñ –∑–∞–¥–∞–Ω—ñ –≤ initial–°olumns.type
// 20231128 // –í–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Å—Ç–æ–≤–±—Ü—è—Ö –∑–≥—ñ–¥–Ω–æ –¥–∞–Ω–∏—Ö (initial–°olumns.align)/–ø–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é –∑–≥—ñ–¥–Ω–æ —Ç–∏–ø—ñ–≤ –¥–∞–Ω–∏—Ö (initial–°olumns.type: number+boolean=right/ date=center/ —Ä–µ—à—Ç–∞=left)/–Ø–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–∏–π —Ç–∏–ø, —Ç–æ =left
// 20231215 -  –í–Ü–¥–º—ñ—Ç–∏—Ç–∏(–∑–Ω—è—Ç–∏) –≤—Å—ñ/
// 20231217 - <th>i<td>-whitespace-nowrap-—â–æ–± —Ç–µ–∫—Å—Ç —É –∫–æ–º—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–≤—Å—è(–¥–æ–≤–≥–∏–π —Ä—è–¥–æ–∫)
// 20231222 - C—É–º–∏ –ø–æ —Å—Ç–æ–≤–±—Ü—è—Ö:–ù–∏–∂–Ω—ñ–π —Ä—è–¥–æ–∫ —Å—É–º—É–≤–∞–Ω–Ω—è/–ü—Ä–∞—Ü—é—î –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ initial–°olumns(sum: "sum","max","min","mean" \\–º–æ–∂–Ω–∞ –≤—ñ–¥–∫–ª—é—á–∏—Ç–∏ (p_sum=false)-–Ω–µ–±—É–¥–µ –Ω—ñ –Ω–∏–∂–Ω—å–æ–æ —Ä—è–¥–∫–∞ –Ω—ñ –∫–Ω–æ–ø–∫–∏ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è Sum
// 20231226 –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ñ-—Ü—ñ–π —Ç–∞–±–ª–∏—Ü—ñ:/–≤–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ/—à—Ä–∏—Ñ—Ç–∏/—Ñ—ñ–ª—å—Ç—Ä/—à–≤–∏–¥–∫–∏–π –ø–æ—à—É–∫/–ø—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ä—è–¥–æ–∫/
// 20231227 –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ —Ç–∞–±–ª–∏—Ü—ñ–æ–±—î–∫—Ç—ñ–≤ "img"(–ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É) —ñ"boolean"(–≥–∞–ª–æ—á–∫–∞-—ñ–∫–æ–Ω–∫–∞)
// 20231228 –î–æ—Ä–æ–±–∏–≤: –§—ñ–ª—å—Ç—Ä–∏ –ø–æ –¥–∞—Ç—ñ/ —â–æ–± –ø—Ä–∞—Ü—é–≤–∞–ª–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –ø–æ date, –∑ SQL –∑–∞–ø–∏—Ç—É —Ç—Ä–µ–±–∞ –ø–º–æ–≤–µ—Ä—Ç–∞—Ç–∏ —á–∏—Å—Ç–∏–π —Ç–∏–ø –¥–∞—Ç–∏ –≤ —Ñ–æ—Ä—Ç–∞—Ç—ñ yyyy-mm-ddT00:00:0000 –∞ –Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≤ –∑–∞–ø–∏—Ç—ñ  char —Ç–∏–ø—É COALESCE(to_char(date_create, 'MM-DD-YYYY'), '') AS datecreate,
// –î—ñ—è	–ü–æ–≤–µ–¥—ñ–Ω–∫–∞
// üîº / üîΩ —Å—Ç—Ä—ñ–ª–∫–∞	–ª–∏—à–µ –∑–º—ñ–Ω—é—î —Ñ–æ–∫—É—Å (–Ω–µ –∑–º—ñ–Ω—é—î select)
// Enter / –ü—Ä–æ–±—ñ–ª (space)	–≤–∏–¥—ñ–ª—è—î/–∑–Ω—ñ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏–π (focused) —Ä—è–¥–æ–∫
// –ö–ª—ñ–∫ –º–∏—à–µ—é –ø–æ —Ä—è–¥–∫—É	–≤–∏–¥—ñ–ª—è—î/–∑–Ω—ñ–º–∞—î —Ü–µ–π —Ä—è–¥–æ–∫
//--------------------------------------------------------------------------------------------------------------------

//*** –¢–∏–ø–∏ –¥–∞–Ω–∏—Ö ******* */(string,number,boolean,img,date-—Ü–µ –æ–±'—î–∫—Ç,–∞–ª–µ —Ç—Ä–µ–±–∞ –≤–∫–∞–∑—É–≤–∞—Ç–∏)
// –î–ª—è –∫—Ä–∞—â–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–∏–ø–∏ –¥–∞–Ω–∏—Ö
// –Ø–∫—â–æ —Ç–∏–ø –Ω–µ –≤–∫–∞–∑–∞–Ω–∏–π, —Ç–æ –≤—ñ–Ω –ø—Ä–∏—Ä—ñ–≤–Ω—é—î—Ç—å—Å—è –¥–æ (string)

"use client"
import { useState, useMemo, useCallback, useRef, useEffect } from "react"
// import Image from "next/image"
import { useRouter } from "next/navigation"
import * as XLSX from "xlsx" //–ï–∫–ø–æ—Ä—Ç –≤ EXELL
import { saveAs } from "file-saver" //–î–ª—è –∑–∞–ø–∏—Å—É —Ñ–∞–π–ª—ñ–≤/–ï–∫–ø–æ—Ä—Ç –≤ EXELL
import TableFooter from "./TableFooter"
import { TablePageRows } from "./TablePageRows"
import DropdownFilter from "./DropdownFilter"
import TableMenuDroop from "./TableMenuDroop"
// import TableMenuDroop from "./TableMenuDroopSeting"

export default function Rtable({
  initialData, //–ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ (–∑ –ë–î) - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ
  initial–°olumns, //–ø–æ–ª—è(–∑–∞–¥–∞—é—Ç—å—Å—è –≤ ...) - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ
  p_title, //–Ω–∞–∑–≤–∞ —Ç–∞–±–ª–∏—Ü—ñ/- –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ
  p_selected, //–í–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ+ —ñ–Ω–≤–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫-—Å—Ç—å –≤–∏–±—Ä–∞–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤
  p_fonts, //—á–∏ —Ç—Ä–µ–±–∞ –∑–º—ñ–Ω—ñ —Ñ–æ–Ω—Ç—ñ–≤(–≤–µ–ª–∏—á–∏–Ω–∞ —à—Ä–∏—Ñ—Ç—ñ–≤)(true/false)
  p_filtered, //—á–∏ —Ç—Ä–µ–±–∞ –§—ñ–ª—å—Ç—Ä –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö-–Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ(true/false)
  p_sumRow, //—á–∏ —Ç—Ä–µ–±–∞ –ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ä—è–¥–æ–∫(true/false)
  p_searchAllRows, //—á–∏ —Ç—Ä–µ–±–∞ –ø–æ—à—É–∫ –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö-–Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ(true/false)
  //
  setIsFormAdd, //–î–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è —Ñ–æ—Ä–º–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
  setIsFormEdit,
  setIsFormDelete,
  setEditData, //–¥–∞–Ω—ñ –¥–ª—è –∫–æ—Ä–∏–≥—É–≤–∞–Ω–Ω—è
  setDeleteData, //–¥–∞–Ω—ñ –¥–ª—è –≤–∏–ª—É—á–µ–Ω–Ω—è
  //   fDelete, //–§-—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤(–ø—Ä–∏–π–ª–∞—î –º–∞—Å–∏–≤ rows –ë–î)
}) {
  const router = useRouter() //–¥–ª—è –≤–∏—Ö–æ–¥—É —ñ–∑ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ —ñ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ —ñ–Ω—à—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  const [isTableMenuDroop, setIsTableMenuDroop] = useState(false) //—á–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ drawer –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ –ø–æ–¥—ñ–π
  //   const [isMenuSetingDrop, setIsMenuSetingDrop] = useState(false) //–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è(—à–µ—Å—Ç–µ—Ä–Ω—è)(–ù–ï –ë–£–î–ï)—á–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –º–µ–Ω—é –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  const [isDropdownFilter, setIsDropdownFilter] = useState(false) //—á–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –≤—ñ–∫–Ω–æ —Ñ—ñ–ª—å—Ç—Ä—É
  const [pSeting, setPSeting] = useState({
    pSelected: p_selected,
    pFonts: p_fonts,
    pFiltered: p_filtered,
    pSumRow: p_sumRow,
    pSearchAllRows: p_searchAllRows,
  })
  //   console.log("RTable.js/pSeting=", pSeting)
  const [workData, setWorkData] = useState([]) //–†–û–±–æ—á–∞ —Ç–∞—å–ª–∏—Ü—è
  const [filterData, setFilterData] = useState([]) //–§—ñ–ª—å—Ç–µ—Ä –¥–ª—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤
  const [sumRow, setSumRow] = useState({}) //–ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ä—è–¥–æ–∫(–¥–∞–Ω—ñ)
  const [selectedRows, setSelectedRows] = useState([]) //–í–∏–±—Ä–∞–Ω—ñ —Ä—è–¥–∫–∏(–¥–∞–Ω—ñ{1,2,...})
  const [selectedAllRows, setSelectedAllRows] = useState(false) //–ß–∏ –±—É–ª–∞ –ø–æ–¥—ñ—è –≤–∏–±—Ä–∞–Ω—ñ –≤—Å—ñ
  const [sortField, setSortField] = useState("") //–ü–æ–ª–µ(–∫–æ–ª–æ–Ω–∫–∞) –ø–æ —è–∫—ñ–π —Å–æ—Ä—Ç—É—î—Ç—å—Å—è
  const [order, setOrder] = useState("asc") //–°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –≤ —è–∫—É —Å—Ç–æ—Ä–æ–Ω—É(–≤–µ—Ä—Ö/–≤–Ω–∏–∑)
  const [rowsPerPage, setRowsPerPage] = useState(15) //–ö-—Å—Ç—å —Ä—è–¥–∫—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
  const [tableFontSize, setTableFontSize] = useState("sm") //–®—Ä–∏—Ñ—Ç–∏ —Ç–∞–±–ª–∏—Ü—ñ(font-size )
  const [lengthSearhValue, setLengthSearhValue] = useState(0) //–ü–æ–ø–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è —Ä—è–¥–∫–∞ –ø–æ—à—É–∫—É(–î–ª—è –≤—ñ–¥–∫–∞—Ç—É –ø–æ—à—É–∫—É)
  const [beforSeachData, setBeforSeachData] = useState([]) //–ó–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ë–î –ø–µ—Ä–µ–¥ –ø–æ—à—É–∫–æ–º (–î–ª—è –≤—ñ–¥–∫–∞—Ç—É –ø–æ—à—É–∫—É)
  const [beforFilterData, setBeforFilterData] = useState([]) //–ó–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ë–î –ø–µ—Ä–µ–¥ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è–º (–î–ª—è –≤—ñ–¥–∫–∞—Ç—É)
  const [filteredState, setFilteredState] = useState(0) //–°—Ç–∞–Ω —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è (0-–Ω–µ–∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä —ñ –Ω–µ –±—É–ª–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è/ 1-–∑–∞–ø–æ–≤–Ω–µ–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä, –∞–ª–µ –Ω–µ –±—É–ª–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è / 2- –±—É–ª–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è)
  const dataJson = useRef([]) // –¥–ª—è convertToJson –∑ EXELL/–∑–±–µ—Ä—ñ–≥–∞—î –¥–æ renderingy
  //** –°—Ç–æ—Ä—ñ–Ω–∫–∏ */ //https://dev.to/franciscomendes10866/how-to-create-a-table-with-pagination-in-react-4lpd
  const [page, setPage] = useState(1) //–ù–æ–º–µ—Ä —Ç–µ–∫—É—á–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  const tableWrapperRef = useRef(null) //–°–∫—Ä–æ–ª–∏—Ç–∏ –¥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä—è–¥–∫–∞
  const [focusedRowId, setFocusedRowId] = useState(null) //üîº / üîΩ —Å—Ç—Ä—ñ–ª–∫–∞	–ª–∏—à–µ –∑–º—ñ–Ω—é—î —Ñ–æ–∫—É—Å (–Ω–µ –∑–º—ñ–Ω—é—î select)

  // –°—Ç–∏–ª—ñ —Ç–∞–±–ª–∏—Ü—ñ
  //–í–µ–ª–∏—á–∏–Ω–∞ —â—Ä–∏—Ñ—Ç–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ —Ç–∞–±–ª–∏—Ü—ñ(–Ω–∞–¥–±—É–¥–æ–≤–∞(–ø–æ—à—É–∫+—ñ—Ç—Ñ–æ)/—à–∞–ø–∫–∞/—á–∞–∫–ª—É–Ω–∫–∏/footer(–ø—ñ–¥—Å—É–º–∫–∏)/–Ω–∏–∂–Ω—ñ–π —ñ–Ω—Ñ–æ—Ä—è–¥–æ–∫ –∑ –≤–∏–±–æ—Ä–æ–º —Å—Ç–æ—Ä—ñ–Ω–æ–∫ (–ú–û–ñ–õ–ò–í–ò–ô –í–ò–ë–Ü–†)
  //em-–í—ñ–¥–Ω–æ—Å–Ω–æ —Ä–æ–∑–º—ñ—Ä—É —à—Ä–∏—Ñ—Ç—É –¥–∞–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞(=em*text-xs)
  const styleTableImg =
    tableFontSize === "xs"
      ? " h-3 w-3"
      : tableFontSize === "sm"
      ? "h-[14px] w-[14px]"
      : tableFontSize === "base"
      ? "h-4 w-4"
      : "h-[18px] w-[18px]"

  const styleTableText =
    tableFontSize === "xs"
      ? " text-xs p-[0.25em]"
      : tableFontSize === "sm"
      ? " text-sm p-[0.2em]"
      : tableFontSize === "base"
      ? " text-base p-[0.2em]"
      : " text-lg p-[0.2em]"

  const styleTitleText =
    tableFontSize === "xs"
      ? " text-lg p-[0.1em]"
      : tableFontSize === "sm"
      ? " text-xl p-[0.1em]"
      : tableFontSize === "base"
      ? " text-2xl p-[0.1em]"
      : " text-3xl p-[0.1em]"

  //   const styleTableRowsColor = row._selected
  //     ? "bg-tabTrBgSel dark:tabTrBgSelD"
  //     : " odd:bg-tabTrBg even:bg-tabTrBgEve hover:bg-tabTrBgHov dark:odd:bg-tabTrBgD dark:even:bg-tabTrBgEveD dark:hover:bg-tabTrBgHovD";
  //   const styleTableRowsColor = row._selected
  //     ? "bg-tabTrBgSel dark:tabTrBgSelD"
  //     : " odd:bg-tabTrBg even:bg-tabTrBgEve hover:bg-tabTrBgHov dark:odd:bg-tabTrBgD dark:even:bg-tabTrBgEveD dark:hover:bg-tabTrBgHovD";
  // }  hover:bg-tabTrBgHov dark:odd:bg-tabTrBgD dark:even:bg-tabTrBgEveD dark:hover:bg-tabTrBgHovD`}

  // className =
  //   "odd:bg-tabTrBg even:bg-tabTrBgEve hover:bg-tabTrBgHov dark:odd:bg-tabTrBgD dark:even:bg-tabTrBgEveD dark:hover:bg-tabTrBgHovD";
  //-----------------------------------------------------------------------------------------

  //== –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–æ–±–æ—á–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ workData */   //https://habr.com/ru/companies/otus/articles/696610/
  const preparedData = useMemo(() => {
    // console.log("FRtable.js/preparedData= useMemo")
    // console.log("FRtable.js/preparedData/initialData=/", initialData)
    // const start = Date.now(); //–ß–∞—Å –ø–æ—á–∞—Ç–∫—É
    const temp = initialData.map((data, idx) => {
      let tempData = { ...data } // Copy object()
      tempData._nrow = idx // Set new field/–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤–µ –ø–æ–ª–µ
      // if (typeof p_selected !== "undefined") tempData._selected = false; // Set new field
      tempData._selected = false // Set new field/–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤–µ –ø–æ–ª–µ
      return tempData //–ù–æ–≤–∏–π –º–∞—Å–∏—Å –∑ –¥–æ–±–∞–≤–ª–µ–Ω–º–∏–º –ø–æ–ª—è–º–∏ tempData._nrow/tempData._selected
    })
    // const millis = Date.now() - start; //–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
    // console.log("FRtable.js/preparedData/–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è : ", millis + "ms");
    setWorkData(temp)
    // return temp
  }, [initialData]) //–ó–º—ñ–Ω—é—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ 2-–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞

  //==  –†–æ–±–æ—á–∞ —Ç–∞–±–ª–∏—Ü—è*/
  //   const [workData, setWorkData] = useState(preparedData) //–†–û–±–æ—á–∞ —Ç–∞—å–ª–∏—Ü—è

  //--------------------------------------------------------------------

  //== –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Å–∏–≤—É —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –ø–æ –ø–æ–ª—è—Ö (filterData) */
  const preparedFilterData = useMemo(() => {
    // console.log("FRtable.js/preparedFilterData = useMemo/")
    // console.log("FRtable.js/preparedFilterData = useMemo/")
    let resData = [] //–º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
    let nR = -1
    const temp = initial–°olumns.map((data, idx) => {
      let tempData = {} // –æ–±‚Äô—î–∫—Ç–∞
      if (data.filtered != undefined && data.filtered) {
        nR = nR + 1
        tempData._nrow = nR
        tempData.name = data.label
        tempData.accessor = data.accessor
        if (data.type != undefined) tempData.type = data.type
        else tempData.type = "string"
        tempData.comparisonFirst = ""
        tempData.filterFirst = ""
        tempData.logical = ""
        tempData.comparisonTwo = ""
        tempData.filterTwo = ""
        resData.push(tempData) //–î–æ–¥–∞—î–º–æ –≤ –º–∞—Å–∏–≤
      }
    })
    setFilterData(resData)
    // return resData
  }, [initial–°olumns]) //–ó–º—ñ–Ω—é—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ 2-–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞

  //--- –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ —Ç–µ–∫—É—á–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏: slice, range: –∫-—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ —É –≤—Å—ñ–π –ë–î
  //--- workData-–ë–î, page-‚Ññ —Ç–µ–∫—É—á–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏, rowsPerPage-–∫-—Å—Ç—å —Ä—è–¥–∫—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  const { slice, range } = TablePageRows(workData, page, rowsPerPage) //–§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫

  //==*–ø –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */
  const handleSorting = (sortField, sortOrder) => {
    // console.log("FRtable./js/handleSorting/")
    //--- –î–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    if (sortOrder === "default") {
      sortOrder = "asc"
      sortField = "_nrow"
    }
    //--- –°–∞–º–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    if (sortField) {
      const sorted = [...workData].sort((a, b) => {
        if (a[sortField] === null) return 1
        if (b[sortField] === null) return -1
        if (a[sortField] === null && b[sortField] === null) return 0
        return (
          a[sortField].toString().localeCompare(b[sortField].toString(), "en", {
            numeric: true,
          }) * (sortOrder === "asc" ? 1 : -1)
        )
      })
      setWorkData(sorted)
    }
  }

  //--- –ó–∞–¥–∞—î —Ä–µ–∂–∏–º —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
  const handleSortingChange = (accessor) => {
    // console.log("FRtable.js/handleSortingChange/")
    // console.log("RTable.js/handleSortingChange/accessor=", accessor)
    const sortOrder =
      //   accessor === sortField && order === "asc" ? "desc" : "asc";
      accessor === sortField && order === "asc" ? "desc" : order === "desc" ? "default" : "asc"
    setSortField(accessor)
    setOrder(sortOrder)
    // console.log("RTable.js/handleSortingChange/sortOrder=", sortOrder);
    handleSorting(accessor, sortOrder)
  }
  //==*–∫ –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */

  //== –ü–æ—à—É–∫(search)/—Ñ—ñ–ª—å—Ç–µ—Ä-–ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö –∑—Ä–∞–∑—É */
  const seachAllFilds = (e) => {
    // console.log("FRtable.js/seachAllFilds/")
    const searchValue = e.target.value
    if (lengthSearhValue === 0) {
      setBeforSeachData(workData)
    }
    const rows = beforSeachData

    // console.log("seachAllFilds/searchValue=", searchValue + "/ rows", rows);
    if (rows.length > 0) {
      const attributes = Object.keys(rows[0]) //–¶–µ —Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫—É

      const nowData = []
      //-- –¶–∏–∫–ª –ø–æ —Ä—è–¥–∫–∞—Ö
      for (const current of rows) {
        //–¶–∏–∫–ª –ø–æ –∫–æ–ª–æ–Ω–∫–∞—Ö
        for (const attribute of attributes) {
          //–í—ñ–¥—Å—ñ—é—î–º–æ –ø–æ–ª—è –ø–æ —è–∫–∏—Ö –Ω–µ —Ä–æ–±–∏—Ç—å—Å—è –ø–æ—à—É–∫
          if (attribute === "id" || attribute === "_nrow" || attribute === "_selected") {
            continue //–ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ –ø–æ–ª–µ
          }
          //   const value = current[attribute];
          const value = String(current[attribute]).toLowerCase() //–ø–µ—Ä–µ–≤–æ–¥–∏–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
          //–ø–æ—Ä—ñ–≤–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è —ñ–∑ –ø–æ—à—É–∫–æ–º, –ø–µ—Ä–µ–≤–æ–¥–µ–Ω–∏–º —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
          if (value.includes(searchValue.toLowerCase())) {
            nowData.push(current)
            break //–≤–∏—Ö—ñ–¥ –∑ –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ–≥–æ —Ü–∏–∫–ª—É
          }
        }
      }
      setLengthSearhValue(searchValue.length)
      setWorkData(nowData)
      setSumRow({}) //–æ—á–∏—Å—Ç–∫–∞ –Ω–∏—Ö–Ω—å–æ–≥–æ —Ä—è–¥–∫–∞
    }
  }

  //== –í–∏–±—ñ—Ä/Selected / –ó–∞–ø–∏—Å—É—î–º–æ —Å–µ–ª–µ–∫—Ç(true/false) –≤ _selected —Ä–æ—Ç–æ—á–æ–≥–æ –º–∞—Å–∏–≤—É(workData) */
  const selectRows = (e) => {
    // console.log("FRtable.js/selectRows/")
    const nRow = Number(e.target.id) //id-–¶–µ DOM(<td id="1"> –Ø –π–æ–º—É –ø—Ä–∏—Å–≤–æ—é—é –∑–Ω–∞—á–µ–Ω–Ω—è –ë–î=_nrow)
    //--- –§–æ—Ä–º—É—î–º–æ –º–∞—Å–∏–≤ –∑ —ñ–Ω–¥–µ–∫—Å–∞–º–∏ –≤—ñ–¥–º—ñ—á–µ–Ω–∏—Ö –∑–∞–ø–∏—Å—ñ–≤ (setSelectedRow) --------------------
    let copyArray = ([] = [...selectedRows]) //–ö–æ–ø—ñ—è —Ä–æ–±–æ—á–æ–≥–æ –º–∞—Å–∏–≤—É –æ–±—î–∫—Ç—ñ–≤

    // //–°–∫–∏–¥–∞—î–º–æ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑ —É—Å—ñ—Ö, —è–∫—â–æ –±—É–ª–æ –∑–∞–≥–∞–ª—å–Ω–µ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è
    if (selectedAllRows) {
      onSelectAll()
      copyArray = [] //—Å–∫–∏–¥–∞—î–º–æ –º–∞—Å–∏–≤
    }

    //—à—É–∫–∞—î–º–æ –≤ –º–∞—Å–∏–≤—ñ
    const selectIndex = copyArray.findIndex((item) => item === nRow) //—ñ–Ω–¥–µ–∫—Å –Ω–∞—à–æ–≥–æ –º–∞—Å–∏–≤—É —Ü–µ id HTML DOM –µ–ª–µ–º–µ–Ω—Ç–∞ (–≤ –Ω–∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É:id={_nrow})
    // console.log("RTable.js.js/selectRows/selectedRows.length=", selectedRows.length)
    // console.log("RTable.js.js/selectRows/selectedRows=", selectedRows)
    // console.log("RTable.js.js/selectRows/selectIndex=", selectIndex);
    if (selectIndex === -1) {
      //–Ø–∫—â–æ –≤–∏–¥—ñ–ª–µ–Ω–∞ —Ö–æ—á –æ–¥–Ω–∞ –∑–∞–ø–∏—Å
      //   if (selectedRows.length > 0 && !e.ctrlKey) return //–Ø–∫—â–æ –≤–∏–¥—ñ–ª–µ–Ω–∞ —Ö–æ—á –æ–¥–Ω–∞ –∑–∞–ø–∏—Å
      copyArray.push(nRow) //—è–∫—â–æ –Ω–µ–º–∞ —Ç–æ –¥–æ–¥–∞—î–º–æ –≤ –º–∞—Å–∏–≤
      //   console.log("RTable.js.js/addSelecrToRbTable/nRow=", nRow);
    } else copyArray.splice(selectIndex, 1) //–Ø–∫—â–æ –≤–∂–µ —î –≤ –º–∞—Å–∏–≤—ñ —Ç–æ –≤–∏–¥–∞–ª—è—î–º–æ(–∑–Ω—ñ–º–∞—î–º–æ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è)
    // console.log("RTable.js/selectRows/copyArray=", copyArray)

    //–û–±–Ω–æ–≤–ª—è—î–º–æ –º–∞—Å–∏–≤
    setSelectedRows(copyArray) //–ó–∞–ø–º—Å –≤ –º–∞—Å–∏–≤

    //--- –ó–∞–ø–∏—à–µ–º–æ —Å–µ–ª–µ–∫—Ç(true/false) –≤ _selected —Ä–æ—Ç–æ—á–æ–≥–æ –º–∞—Å–∏–≤—É(workData) --------
    let tWorkData = [...workData] //–ö–æ–ø—ñ—è —Ä–æ–±–æ—á–æ–≥–æ –º–∞—Å–∏–≤—É –æ–±—î–∫—Ç—ñ–≤

    //https://www.geeksforgeeks.org/how-to-modify-an-objects-property-in-an-array-of-objects-in-javascript/
    const targetObj = tWorkData.find((obj) => obj._nrow === nRow) //–®—É–∫–∞–∂–º–æ –∑–∞–ø–∏—Å –ø–æ _nrow=nRow
    // console.log("RTable.js.js/selectRows/targetObj=", targetObj);
    if (targetObj) {
      const newSelect = !targetObj._selected
      targetObj._selected = newSelect
      setWorkData(tWorkData)
    }
  }

  //--- –í–∏–±—ñ—Ä/Selected (–≤—Å—ñ)
  const onSelectAll = () => {
    // console.log("FRtable.js/onSelectAll/")
    let tWorkData = [...workData] //–ö–æ–ø—ñ—è —Ä–æ–±–æ—á–æ–≥–æ –º–∞—Å–∏–≤—É –æ–±—î–∫—Ç—ñ–≤
    let tSelectedData = []
    const temp = tWorkData.map((data, idx) => {
      if (selectedAllRows) data._selected = false
      else data._selected = true
      setWorkData(tWorkData)
      //   console.log("FRtable.js/onSelectAll/tSelectedData=", tSelectedData)
      if (!selectedAllRows) tSelectedData.push(data._nrow) //–î–æ–¥–∞—î–º–æ –≤ –º–∞—Å–∏–≤
    })
    //
    setSelectedAllRows(!selectedAllRows)
    // console.log("FRtable.js/onSelectAll/tSelectedData=", tSelectedData)
    setSelectedRows(tSelectedData)
  }

  //== –§—ñ–ª—å—Ç—Ä –º–Ω–æ–∂–∏–Ω–Ω–∏–π */
  //--- –§–æ—Ä–º—É—î (true/false) –¥–ª—è —Å—Ç–∏–ª—é —à–æ–± –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —ñ–∫–æ–Ω–∫—É —Ñ—ñ–ª—å—Ç—Ä—É –±—ñ–ª—è –Ω–∞–∑–≤–∏ –≤ —à–∞–ø—Ü—ñ, —è–∫—â–æ —î –∑–∞–¥–∞–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä –ø–æ —Ü—å–æ–º—É –ø–æ–ª—é
  const clasThFilter = useCallback(
    (accessor) => {
      //   console.log("FRtable.js/clasThFilterl/")
      const targetObj = filterData.find((obj) => obj.accessor === accessor) //–®—É–∫–∞–∂–º–æ –∑–∞–ø–∏—Å
      // console.log("RTable.js.js/applyFilters/targetObj ==", targetObj)
      if (targetObj && targetObj.filterFirst.length > 0) {
        return true
      } else return false
    },
    [filterData]
  )

  //---*** –°–∞–º —Ñ—ñ–ª—å—Ç—Ä/Apply/–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ //–í–∏–∑–Ω–∞—á–∞—î –º–∞—Å–∏–≤ –¥–∞–Ω–∏—Ö, —è–∫—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞–º –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö (filterData)
  const applyFilters = () => {
    // console.log("FRtable.js/applyFilters/")
    setIsDropdownFilter(false) //–ó–∞–∫—Ä–∏–≤–∞—î–º –≤–∏–ø–∞–¥–∞—é—á–µ –≤—ñ–∫–Ω–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    if (filteredState === 0) return
    //--- –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ-—Ü—ñ—ó
    //–Ø–∫ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä –∑–º—ñ–Ω–Ω–æ—ó –≤ JavaScript? // https://stackoverflow.com/questions/66267093/how-to-implement-a-variable-operator-in-javascript
    //--- –û–±'—î–∫—Ç(–Ω–∞–±—ñ—Ä –∑–º—ñ–Ω–Ω–∏—Ö), —â–æ —ñ–º—ñ—Ç—É—î –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏
    const operators = {
      ">": (a, b) => a > b,
      ">=": (a, b) => a >= b,
      "<": (a, b) => a < b,
      "<=": (a, b) => a <= b,
      "==": (a, b) => a == b,
      "!=": (a, b) => a != b,
    }
    //--- –§-—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è 2-—Ö –∑–º—ñ–Ω–Ω–∏—Ö –∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä–º,—è–∫–∏–π —î –≤ –∑–º—ñ–Ω–Ω—ñ–π
    function doCompare(x, y, op) {
      const check = operators[op] ?? (() => false)
      if (check(x, y)) {
        return true
      } else {
        return false
      }
    }
    //*-- –§-—Ü—ñ—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –¥–æ –∑–∞–¥–∞–Ω–∏—Ö —Ç–∏–ø–∏–≤—ñ —Ç–∞–±–ª–∏—Ü—ñ —ñ —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
    const valToType = (value, type = "string") => {
      // console.log("RTable.js.js/applyFilters/value=", value + "/type=", type)
      if (type === "number") return parseFloat(value)
      if (type === "date") return Date.parse(value)
      return String(value).toLowerCase() //–ø–µ—Ä–µ–≤–æ–¥–∏–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
    }

    //--- –ü–æ—á–∞—Ç–æ–∫ —Ñ—ñ–ª—å—Ç—Ä—É—ñ–≤–∞–Ω–Ω—è
    // console.log("RTable.js.js/applyFilters/filterData=", filterData);
    // console.log("RTable.js.js/applyFilters/filteredState=", filteredState)
    let tempWorkData = []
    if (filteredState === 2) {
      tempWorkData = [...beforFilterData] //–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è workData
    } else {
      setBeforFilterData(workData) //–î–ª—è –≤—ñ–¥–∫–∞—Ç—É(–ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—É)
      tempWorkData = [...workData] //–ü–µ—Ä—à–∏–π —Ä–∞–∑ –ø–æ—á–∏–Ω–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –∑ workData}
    }
    // console.log("RTable.js.js/applyFilterstempWorkData=", tempWorkData)

    const nowData = []
    //*** –¶–∏–∫–ª –ø–æ —Ä—è–¥–∫–∞—Ö
    // const attributes = Object.keys(tempWorkData[0]); //–¶–µ —Ä—è–¥–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫—É(–º–∞—Å–∏–≤)
    // console.log("RTable.js.js/ApplyFilters/attributes=", attributes);
    // console.log("RTable.js.js/ApplyFilters/for2/filterData=", filterData)
    for (const current of tempWorkData) {
      // console.log("RTable.js.js/ApplyFilters/for1/currentRow=", current)
      //++++ –ü—Ä–∏–Ω—Ü–∏–ø –≤–∏—Ö–æ–¥—É –∑ –∞—Ç—Ä–∏–±—É—Ç—É(for2) –ø—Ä–∏ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—è—Ö
      //–¶–∏–∫–ª –ø–æ –∫–æ–ª–æ–Ω–∫–∞—Ö \\ –©–æ–± –Ω–µ –±—ñ–≥—Ç–∏ –ø–æ –º–∞—Å–∏–≤—É —Ä–æ
      let rowFilterted = false
      for (const column of filterData) {
        const attribute = column.accessor
        // console.log("RTable.js.js/ApplyFilters/for2/rowColumn=", column)
        // console.log("RTable.js.js/ApplyFilters/for2/attribute=", attribute)
        // –ß–∏ —î –Ω–µ –ø—É—Å—Ç–∏–π —Ñ—ñ–ª—å—Ç—Ä –ø–æ —Ü—å–æ–∏—É –ø–æ–ª—é –≤ –º–∞—Å–∏–≤—ñ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
        const targetObj = filterData.find((obj) => obj.accessor === attribute)
        //===============================
        if (targetObj.filterFirst.length > 0) {
          //   console.log("RTable.js.js/ApplyFilters/for2/attribute=", attribute);
          const filterRow = `${targetObj.comparisonFirst}/${targetObj.filterFirst}/${targetObj.logical}/${targetObj.comparisonTwo}/${targetObj.filterTwo}`
          //   console.log("RTable.js.js/ApplyFilters/for2/targetObj: ", targetObj);
          //   console.log("RTable.js.js/ApplyFilters/for2/filterRow: ", filterRow);

          //--- –ó–∞–¥–∞—î–º –∑–º—ñ–Ω–Ω—É —Ç–∏–ø—É –ø–æ–ª—è //–¢–∏–ø –∑–º—ñ–Ω–Ω–æ—ó, —è–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–∏–π —Ç–æ "string"
          const valueType = targetObj.type === undefined ? "string" : targetObj.type //–§-—Ü—ñ—è —â–æ –∑–∞–¥–∞—î —Ç–∏–ø–∏
          //--- –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —É —Ä–æ–±–æ—á—ñ –∑–º—ñ–Ω–Ω—ñ —É –≤–∫–∞–∑–∞–Ω–∏–π —Ç–∏–ø —ñ —É –Ω–∏–∂–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä
          const valueData = valToType(current[attribute], valueType) //–ó–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—è —Ä–æ–±–æ—á–æ—ó –ë–î
          const filterFirst = valToType(targetObj.filterFirst, valueType) //–ó–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—É1
          //   console.log("RTable.js.js/ApplyFilters/typeof /valueData=", valueData + "/", typeof valueData)
          //   console.log("RTable.js.js/ApplyFilters/filterFirst=", filterFirst + "/", typeof filterFirst)

          //https://stackoverflow.com/questions/66267093/how-to-implement-a-variable-operator-in-javascript
          //doCompare-—Ñ-—Ü—ñ—è —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è 2-—Ö –∑–º—ñ–Ω–Ω–∏—Ö –¥–µ —Ç—Ä–µ—Ç—è —î —Å–∞–º–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è("><=...")
          //filterFirst

          let compareFirst = false
          if (valueType === "number" || valueType === "date") {
            compareFirst = doCompare(valueData, filterFirst, targetObj.comparisonFirst) //   doStuff(4, 2, ">")=true
          } else compareFirst = valueData.includes(filterFirst.toLowerCase()) //–ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è (—á–∏–≤—Ö–æ–¥–∏—Ç—å)
          //
          //   if (compareFirst) {
          //     rowFilterted = true
          //     // console.log("RTable.js/applyFilters/iFcompareFirst/current._nRow:", current._nrow)
          //   }

          //--- –Ø–∫—â–æ —î filterTwo.length
          if (targetObj.filterTwo.length > 0) {
            // console.log("RTable.js/applyFilters/iFfilterTwo/current._nRow:", current._nrow + "/valueData", valueData)
            //   console.log("RTable.js.js/applyFilters/Two/filterRow=", filterRow);
            const filterTwo = valToType(targetObj.filterTwo, valueType) //–ó–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—É1
            let compareTwo = false
            if (valueType === "number" || valueType === "date") {
              compareTwo = doCompare(valueData, filterTwo, targetObj.comparisonTwo)
            } else compareTwo = valueData.includes(filterTwo.toLowerCase())

            //1-a —É–º–æ–≤–∞
            if (compareFirst && compareTwo) {
              rowFilterted = true
            } else {
              //2a
              if (compareFirst != compareTwo && targetObj.logical != "&&") {
                rowFilterted = true
              } else {
                // console.log("RTable.js/ApplyFilte/!(compareTwo)lseIfEls(compareFirst&&/_nRow:", current._nrow)
                rowFilterted = false //–Ø–∫—â–æ "&&"" —Ç–æ –ø—Ä–∏ First = true —ñ Two = false- –≤–∏–∫–∏–¥–∞—î–º–æ–Ω—ñ
                break //–ë–æ filterFirct=true –∞–ª–µ –ø—Ä–∏ "&&" filterTwo=false, –æ—Ç–∂–µ —Ü–µ –ø–æ–ª–µ –≤–∏–ø–∞–¥–∞—î –∞ –∑–Ω–∞—á–∏—Ç—å —ñ –≤–µ—Å—å –∑–∞–ø–∏—Å
              }
            }
          } else if (compareFirst) {
            // console.log("RTable.js/applyFilters/elseIf(–æ—Å—Ç)/current._nRow:", current._nrow)
            rowFilterted = true
          } else {
            rowFilterted = false
            break
          }
        }
        //-- fEndor2
        // console.log("RTable.js/ApplyFilters/Endfor2/_nRow: ", current._nrow + " /attribute:", attribute)
      }
      //--- Endfor1
      //   console.log("RTable.js.js/ApplyFilters/Endfor1*/_nRow: ", current._nrow);
      if (rowFilterted) {
        nowData.push(current) // –î–æ–±–∞–≤–ª—è—î–º–æ —Ç–µ–∫—É—á–∏–π —Ä—è–¥–æ–∫ –≤ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
        // console.log("RTable.js.js/ApplyFilters/Endfor1/if(rowFilterted)***/_nRow: ", current._nrow)
      }
    }
    // console.log("RTable.js.js/ApplyFilters/Endfor1/")
    setWorkData(nowData)
    setFilteredState(2) //–ö–æ–ª—ñ—Ä –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ —Ñ—ñ–ª—å—Ç—Ä—É
    setSumRow({}) //–æ—á–∏—Å—Ç–∫–∞ –Ω–∏—Ö–Ω—å–æ–≥–æ —Ä—è–¥–∫–∞
  }

  //--- –û—á–∏—â–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä/–í—ñ–¥–∫–∞—Ç –¥–∞–Ω–∏—Ö –¥–æ —Ñ—ñ–ª—å—Ç—Ä—É/–ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤–∏–ø–∞–¥–∞—é—á–µ –≤—ñ–∫–Ω–æ
  const deleteFilterAll = () => {
    // console.log("RTable.js/deleteFilterAll/")
    let tempFilterData = [...filterData]
    const temp = tempFilterData.map((data) => {
      data.comparisonFirst = ""
      data.filterFirst = ""
      data.logical = ""
      data.comparisonTwo = ""
      data.filterTwo = ""
    })
    setFilterData(tempFilterData) //–ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º –º–∞—Å–∏–≤ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    // setWorkData(beforSeachData) //–í—ñ–¥–∫–∞—Ç –¥–∞–Ω–∏—Ö –¥–æ —Ñ—ñ–ª—å—Ç—Ä—É
    setIsDropdownFilter(false) //–ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤–∏–ø–∞–¥–∞—é—á–µ –≤—ñ–∫–Ω–æ
    if (filteredState === 2) setWorkData(beforFilterData) //–í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Ä–æ–±–æ—á—É –ë–î –¥–æ —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è
    setFilteredState(0) //–Ü–∫–æ–Ω–∫–∞
    setSumRow({}) //–æ—á–∏—Å—Ç–∫–∞ –Ω–∏—Ö–Ω—å–æ–≥–æ —Ä—è–¥–∫–∞
  }

  //-- –ü—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ä—è–¥–æ–∫ /—Å—É–º,—Å–µ—Ä–µ–¥–Ω—î,max,min
  const applySum = () => {
    // console.log("FRtable.js/applySum/")
    let tRowSum = {} //–æ–±'—î–∫—Ç
    const temp1 = initial–°olumns.map((item) => {
      //   let tempSumRow = { ...sumRow }
      // console.log("RTable.js/applySum/ workData.map/accessor=", item.accessor + "/–∑–Ω–∞—á:", trow[item.accessor])
      if (item.sum === "sum" || item.sum === "mean" || item.sum === "max" || item.sum === "min") {
        let tSum = Number(0)
        let kZap = 0
        const temp = workData.map((trow, idx) => {
          kZap += 1
          // console.log("RTable.js/applySum/ workData.map/accessor=", item.accessor + "/–∑–Ω–∞—á:", trow[item.accessor])
          if (item.sum === "max") {
            if (idx === 0) tSum = trow[item.accessor]
            tSum = Math.max(tSum, Number(trow[item.accessor]))
          } else if (item.sum === "min") {
            if (idx === 0) tSum = trow[item.accessor]
            tSum = Math.min(tSum, Number(trow[item.accessor]))
          } else {
            tSum += Number(trow[item.accessor])
          }
        })
        //—Å–µ—Ä–µ–¥–Ω—î –∞—Ä–∏—ñ–º–µ—Ç–∏—á–Ω–µ
        if (item.sum === "mean") {
          tSum = tSum / kZap
        }
        // console.log("RTable.js/applySum/accessor", item.accessor + "/tSum=", tSum)
        tRowSum[item.accessor] = tSum //–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–æ –æ—å'—è–∫—Ç—É
      }
    })
    // console.log("RTable.js/applySum/tRowSum=", tRowSum)
    setSumRow(tRowSum)
  }

  //-- –í–∏—Ö—ñ–¥ –∑ —Ñ–æ—Ä–º–∏
  const onCancel = () => {
    //—è–∫—â–æ –Ω–µ –¥–æ–≤—ñ–¥–Ω–∏–∫
    router.push("/") //–ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    // if (!isDovidnuk) router.push("/") //–ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    // // if (!isDovidnuk) router.back() //–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å
    // else setDovActive("")
  }

  //=========================================================
  //--Export –≤ EXELL(–†–æ–±)/sheetjs-style   //https://codesandbox.io/p/devbox/alkira-sfubt5?file=%2Fsrc%2Fcomponents%2Fexcelexport%2FExcelExport.tsx%3A2%2C1-3%2C37

  const exportToExcel = (filedata) => {
    const fileType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8"
    const ws = XLSX.utils.json_to_sheet(filedata)
    const wb = { Sheets: { data: ws }, SheetNames: ["data"] }
    const excelBuffer = XLSX.write(wb, { bookType: "xlsx", type: "array" })
    const data = new Blob([excelBuffer], { type: fileType })
    return data
  }

  //***  –Ü–º–ø–æ—Ä—Ç –∑ EXELL –≤ PostgreSQL ******************************** */
  //--   –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–∞–π–ª—É Excel —É —Ñ–æ—Ä–º–∞—Ç JSON
  const convertToJson = async (headers, data) => {
    // console.log("exell_eventfile_table.js/convertToJson/data=", data)
    const rows = []
    //forEach-—Ü–∏–∫–ª
    data.forEach(async (row) => {
      let rowData = {}
      row.forEach(async (element, index) => {
        rowData[headers[index]] = element
      })
      //   console.log("exell_eventfile_table.js/convertToJson/rowData=", rowData)
      rows.push(rowData)
    })

    //
    dataJson.current = rows //dataJson = useRef([])-–±–æ useState –Ω–µ –º—ñ–Ω—è–ª–æ—Å—å?
    // console.log("Rtable.js/convertToJson/dataJson.current=", dataJson.current)

    // setDataJson(rows) //–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö\–Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î –¥–æ renderingy
    // console.log("exell_eventfile_table.js/convertToJson/rows=", rows)
    return rows
  }
  //-- –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è —ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑ EXELL –≤ —Ñ–æ—Ä–º–∞—Ç Json/dataJson
  const importExell = async (e) => {
    const file = e.target.files[0] //–¥–ª—è —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É.
    const reader = new FileReader()
    //—ñ–º–ø–æ—Ä—Ç –∑ EXELL –≤ —Ñ–∞–π–ª fileData
    reader.onload = async (event) => {
      const bstr = event.target.result
      const workBook = XLSX.read(bstr, { type: "binary" }) //—á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É excel
      const workSheetNane = workBook.SheetNames[0] //—á–∏—Ç–∞–Ω–Ω—è –Ω–∞–∑–≤–∏ –∞—Ä–∫—É—à–∞.
      const workSheet = workBook.Sheets[workSheetNane]
      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 }) //—á–∏—Ç–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–∞–π–ª—É.
      const headers = fileData[0] //—á–∏—Ç–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ —Ä—è–¥–∫–∞ —è–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      //   const heads = headers.map((head) => ({ tittle: head, field: head }))
      fileData.splice(0, 1)

      //*** –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç Json –≤ dataJson
      const jData = await convertToJson(headers, fileData)
      //   console.log("RTable.js/handleImportExell/rr=", jData)

      //*** –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–∏—Ö –≤ PjstgreSQL
      const insertZap = await insertDB(jData) //–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–∏—Ö –≤ PjstgreSQL
      //   console.log("RTable.js/handleImportExell/insertZap=", insertZap)
    }
    reader.readAsBinaryString(file)
    // reader.readAsDataURL(file)
  }

  //--- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–∏—Ö –≤ DB PostgreSQL/ –í —Ü–∏–∫–ª—ñ .map –ø–æ 1-–º—É –∑–∞–ø–∏—Å—É
  const insertDB = async () => {
    // console.log("d_product.js/insertDB//dataJson.current=", dataJson.current)

    let insertZap = 0
    try {
      //–¶–∏–∫–ª –ø–æ rowData(–∑–∞–ø–∏—Å –≤ –ë–î (doc_check_products)
      const addToDB = await dataJson.current.map((row, index) => {
        // console.log("RTab.js/insertDB/row=", row)
        //
        rowAdd(row) //–ó–∞–ø–∏—Å –≤ –ë–î(select)
        //
        insertZap = insertZap + 1
      })
    } finally {
      //   console.log("d_product.js/insertDB/finally/insertRows.current=", insertRows.current)
      await alert(`finally:–î–æ–±–∞–≤–ª–µ–Ωo ${insertZap}`)
      //   insertRows.current=0
    }
    return insertZap
  }

  //--- –î–æ–±–∞–≤–∞–ª–µ–Ω–Ω—è(create) –∑–∞–ø–∏—Å—É(–∑–∞–ø–∏—Ç)
  const rowAdd = async (tRow) => {
    // console.log("/RTable/rowAdd/tRow=", tRow)
    const url = "/api/shop/references/d_product" //–ø—Ä–∞—Ü—é—î
    const options = {
      method: "POST",
      body: JSON.stringify(tRow), //–î–ª—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ —Å–µ—Ä–≤–µ—Ä—ñ–≤ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º–∞—Ç JSON
      headers: {
        "Content-Type": "application/json", //–í–∫–∞–∑—É—î –Ω–∞ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É
      },
    }
    const response = await fetch(url, options)
    if (response.ok) {
      // —è–∫—â–æ HTTP-—Å—Ç–∞—Ç—É—Å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 200-299
      const resRow = await response.json() //–ø–æ–≤–µ—Ä—Ç–∞—î —Ç—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ json
      //   console.log(`–ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωo`)
      //   console.log("Product.js/rowAdd/try/esponse.ok/resRow=", resRow)
      //   alert(`–ó–∞–ø–∏—Å —É—Å–ø—ñ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωo`)
      return resRow
    } else {
      const err = await response.json() //–ø–æ–≤–µ—Ä—Ç–∞—î —Ç—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ json
      //   alert(`–ó–∞–ø–∏—Å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ! ${err.message} / ${err.stack}`)
      //   console.log(`Product.js/rowAdd/try/else/\ –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ñ –∑–∞–ø–∏—Å—É\ ${err.message} / ${err.stack} `)
    }
  }
  //--------------------------------------------------

  //-- –î—ñ—ó —Ç–∏–ø—É/Export/Import/–î—Ä—É–∫,,,,
  const fAction = (e, action) => {
    // console.log("RTable.js/fAction/e=", e)
    switch (action) {
      case "toExell":
        saveAs(exportToExcel(workData), "workData" + ".xlsx")
        break
      case "importExel":
        // console.log("RTable.js/fAction/importExel/e=", e)
        importExell(e)
        break
      default:
        break
    }
  }
  //--------------------------------------------------------
  const onDelete = () => {
    // console.log("RTable.js/onDelete/e=")
    let selRows = []
    const temp = workData.map((item) => {
      if (item._selected) {
        // selRow["id"] = item.id
        // selRow["_nRow"] = item._nrow
        selRows.push(item.id) //–î–æ–¥–∞—î–º–æ –≤ –º–∞—Å–∏–≤
      }
    })
    // console.log("FRtable.js/onDelete/selRows=", selRows)
    // fDelete(selRows)//—Ñ-—Ü—ñ—è
    setDeleteData(selRows) //–¥–∞–Ω—ñ –≤–∏–ª—É—á–µ–Ω–Ω—è
    setIsFormDelete(true)
  }
  //--------------------------------------------------------
  const onEdit = () => {
    const temp = workData.map((item) => {
      if (item._selected) {
        // console.log("RTable.js/onEdit/item._selected=", item)
        setEditData(item) //–¥–∞–Ω—ñ –¥–ª—è –∑–º—ñ–Ω–∏ —Ñ–æ—Ä–º–∏
      }
    })
    setIsFormAdd(true)
    setIsFormEdit(true)
  }
  //--------------------------------------------------------
  const onAdd = () => {
    setIsFormAdd(true)
    setIsFormEdit(false)
    setEditData({})
  }
  //--------------------------------------------------------
  const TOverHead = () => {
    return (
      <div className="my-1 flex flex-wrap items-center justify-between">
        {/* left*/}
        {/* –ë–ª–æ–∫:—Å–µ–ª–µ–∫—Ç/—Ñ—ñ–ª—å—Ç–µ—Ä/—à—Ä–∏—Ñ—Ç */}
        <div className="flex flex-wrap items-center justify-start">
          {/*–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∏–±—Ä–∞–Ω—ñ —Ä—è–¥–∫–∏  */}
          {/* {typeof p_selected !== "undefined" && p_selected && ( */}
          {typeof pSeting.pSelected !== "undefined" && pSeting.pSelected && (
            <button
              className="ml-1 flex items-center rounded-lg border border-tabThBorder dark:border-tabThBorderD bg-tabTrBg text-tabTrText dark:text-tabTrTextD p-1 dark:bg-tabTrBgD"
              onClick={onSelectAll}
              title="–í–∏–±—Ä–∞—Ç–∏ –≤—Å—ñ"
            >
              {/* –≥–∞–ª–æ—á–∫–∞ */}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth="2"
                stroke="currentColor"
                className="h-5 w-5 text-iconT dark:text-iconTD"
              >
                <path strokeLinecap="round" strokeLinejoin="round" d="M4.5 12.75l6 6 9-13.5" />
              </svg>

              <p title="–í—ñ–¥–º—ñ—á–µ–Ω–æ">: {selectedAllRows ? workData.length : selectedRows.length}</p>
            </button>
          )}

          {/* –í–∏–±—ñ—Ä —à—Ä–∏—Ñ—Ç–∞ */}
          {typeof pSeting.pFonts !== "undefined" && pSeting.pFonts && (
            <div className="ml-1 md:flex items-center rounded-lg border hidden  border-tabThBorder dark:border-tabThBorderD bg-tabTrBg text-tabTrText dark:text-tabTrTextD p-1 dark:bg-tabTrBgD">
              {/* —ñ–∫–æ–Ω–∫–∞ T */}
              <svg
                className="h-5 w-5 text-iconT dark:text-iconTD"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
              >
                {" "}
                <polyline points="4 7 4 4 20 4 20 7" /> <line x1="9" y1="20" x2="15" y2="20" />{" "}
                <line x1="12" y1="4" x2="12" y2="20" />
                <title>–®—Ä–∏—Ñ—Ç–∏</title>
              </svg>
              <p>:</p>
              <select
                className="mx-1 block w-full  items-center border-tabThBorder bg-tabTrBg align-middle  text-gray-900 hover:cursor-pointer focus:border-blue-500 focus:ring-blue-500 dark:border-tabThBorderD dark:bg-tabTrBgD dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                defaultValue={tableFontSize}
                onChange={(e) => setTableFontSize(e.target.value)}
                title="–í–µ–ª–∏—á–∏–Ω–∞ —à—Ä–∏—Ñ—Ç—É"
              >
                <option value={tableFontSize} disabled>
                  {tableFontSize}
                </option>
                <option value="xs">xs</option>
                <option value="sm">sm</option>
                <option value="base">base</option>
                <option value="lg">lg</option>
                {/* <option value="xs">–¥—Ä—ñ–±–Ω–∏–π</option>
              <option value="sm">—Å–µ—Ä–µ–¥–Ω—ñ–π</option>
              <option value="base">–±–∞–∑–æ–≤–∏–π</option>
              <option value="lg">–≤–µ–ª–∏–∫–∏–π</option> */}
              </select>
            </div>
          )}

          {/* –§—ñ–ª—å—Ç—Ä: –Ü–Ω—Ñ–∞ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ/ –≤—Å—è –ë–î  */}
          {typeof pSeting.pFiltered !== "undefined" && pSeting.pFiltered && (
            <>
              <button
                //   className="ml-1 flex items-center rounded-lg border border-gray-300 bg-gray-50 p-1 dark:bg-gray-700"
                className="ml-1 flex items-center rounded-lg border border-tabThBorder dark:border-tabThBorderD bg-tabTrBg text-tabTrText dark:text-tabTrTextD p-1 dark:bg-tabTrBgD"
                onClick={() => setIsDropdownFilter(!isDropdownFilter)}
              >
                {/* –õ—ñ–π–∫–∞ */}
                <svg
                  className="h-5 w-5 text-iconT dark:text-iconTD"
                  viewBox="0 0 24 24"
                  fill={filteredState === 2 ? "currentColor" : filteredState === 1 ? "green" : "none"}
                  stroke="currentColor"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" />
                  <title>–§—ñ–ª—å—Ç—Ä</title>
                </svg>

                <p title="–í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ">: {workData.length}</p>
                <p title="–í—Å—è –ë–î">/ {initialData.length}</p>
              </button>

              {/* Dropdown menu */}
              {/* {isDropdownFilter && (
                <DropdownFilter
                  filterData={filterData} //–î–∞–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä—É(—Ç—ñ–ª—å–∫–∏ —Ç—ñ –ø–æ–ª—è –ø–æ —è–∫–∏—Ö –∑–∞–¥–∞–Ω–æ )
                  setFilterData={setFilterData}
                  setIsDropdownFilter={setIsDropdownFilter}
                  styleTableText={styleTableText}
                  applyFilters={applyFilters} //–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä
                  deleteFilterAll={deleteFilterAll}
                  filteredState={filteredState} //–©–æ —É —Ñ—ñ–ª—å—Ç—Ä—ñ —î –Ω–µ–ø—É—Å—Ç—ñ –∑–∞–ø–∏—Å–∏
                  setFilteredState={setFilteredState} //–©–æ —É —Ñ—ñ–ª—å—Ç—Ä—ñ —î –Ω–µ–ø—É—Å—Ç—ñ –∑–∞–ø–∏—Å–∏
                />
              )} */}
            </>
          )}
          {/* –Ü–∫–æ–Ω–∫–∞ —Ä—è–¥–∫–∞ —Å—É–º(–Ω–∞–ª–∞—à—Ç–æ–≤—É—î—å—Å—è) */}
          {/* {typeof (pSumRow !== "undefined") && pSumRow && ( */}
          {typeof pSeting.pSumRow !== "undefined" && pSeting.pSumRow && (
            <div>
              <button
                className="ml-1 flex items-center rounded-lg border border-tabThBorder dark:border-tabThBorderD bg-tabTrBg text-tabTrText dark:text-tabTrTextD p-1 dark:bg-tabTrBgD"
                onClick={applySum}
                title="–†—è–¥–æ–∫ —Å—É–º"
              >
                {/* suma */}
                <svg
                  className="h-5 w-5 text-iconT dark:text-iconTD"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  strokeWidth="2"
                  stroke="currentColor"
                  fill="none"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  {" "}
                  <path stroke="none" d="M0 0h24v24H0z" />{" "}
                  <path d="M18 16v2a1 1 0 0 1 -1 1h-11l6-7l-6-7h11a1 1 0 0 1 1 1v2" />
                  <title>–†—è–¥–æ–∫ —Å—É–º</title>
                </svg>
              </button>
            </div>
          )}
        </div>
        <div className=" md:hidden flex justify-end ">
          <HeadRight />
        </div>

        {/*  */}

        {/*–ü–æ—à—É–∫ —à–≤–∏–¥–∫–∏–π/—Ñ—ñ–ª—å—Ç—Ä (—Ä—è–¥–æ–∫ –ø–æ—â—É–∫—É –ø–æ –≤—Å—ñ—Ö –ø–æ–ª—è—Ö) */}
        {typeof pSeting.pSearchAllRows !== "undefined" && pSeting.pSearchAllRows && (
          <div className="relative ml-1 w-full items-center md:w-80">
            <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center  pl-3">
              {/* –õ—É–ø–∞ */}
              <svg
                className="h-5 w-5 text-gray-500 dark:text-gray-400"
                // className="h-5 w-5 text-gray-500 dark:text-red-500"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 20 20"
              >
                <path
                  stroke="currentColor"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"
                />
              </svg>
            </div>
            <input
              size="lg"
              placeholder="–ü–æ—à—É–∫..."
              onChange={(e) => seachAllFilds(e)}
              type="text"
              className="block w-full items-center rounded-lg border border-tabThBorder bg-tabTrBg p-1 pl-10 text-tabTrText dark:border-tabThBorderD dark:bg-tabTrBgD dark:text-tabTrTextD"
            />
          </div>
        )}
        {/* right */}
        <div className=" hidden md:flex justify-end ">
          <HeadRight />
        </div>
      </div>
    )
  }
  //-- –ü—Ä–∞–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ –≥–æ–ª–æ–≤–∏ —Ç–∞–±–ª–∏—Ü—ñ (–∫–Ω–æ–ø–∫–∏ –¥—ñ–π/+,del,edit,exit,,,)
  const HeadRight = () => {
    return (
      <>
        {/* –î–æ–¥–∞—Ç */}
        {selectedRows.length === 0 && (
          <button
            // className="flex h-5 w-5 items-center justify-center rounded-full align-middle    transition-colors hover:bg-hBgHov dark:hover:bg-hBgHovD"
            className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
            // onClick={() => exportToExcel()}
            // onClick={() => setIsFormAdd(true)}
            onClick={onAdd}
            title="–î–æ–¥–∞—Ç–∏"
          >
            {/* –î–æ–¥–∞—Ç–∏ */}
            <svg
              className="h-5 w-5 text-iconT dark:text-iconTD"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              strokeWidth="2"
              stroke="currentColor"
              fill="none"
              strokeLinecap="round"
              strokeLinejoin="round"
            >
              {" "}
              <path stroke="none" d="M0 0h24v24H0z" /> <line x1="12" y1="5" x2="12" y2="19" />{" "}
              <line x1="5" y1="12" x2="19" y2="12" />
            </svg>
          </button>
        )}

        {/* –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω –∑–∞–ø–∏—Å */}
        {selectedRows.length === 1 && (
          <button
            // className="flex h-5 w-5 items-center justify-center rounded-full align-middle    transition-colors hover:bg-hBgHov dark:hover:bg-hBgHovD"
            className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
            // onClick={() => setIsFormAdd(true)}
            onClick={() => onEdit()}
            title="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏"
          >
            {/* –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ */}
            <svg
              className="h-5 w-5 text-iconT dark:text-iconTD"
              viewBox="0 0 24 24"
              strokeWidth="2"
              stroke="currentColor"
              fill="none"
              strokeLinecap="round"
              strokeLinejoin="round"
            >
              {" "}
              <path stroke="none" d="M0 0h24v24H0z" />{" "}
              <path d="M9 7 h-3a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-3" />{" "}
              <path d="M9 15h3l8.5 -8.5a1.5 1.5 0 0 0 -3 -3l-8.5 8.5v3" /> <line x1="16" y1="5" x2="19" y2="8" />
            </svg>
          </button>
        )}

        {/* –Ø–∫—â–æ –≤–∏–±—Ä–∞–Ω–æ —Ö–æ—á –æ–¥–∏–Ω –∑–∞–ø–∏—Å */}
        {selectedRows.length > 0 && (
          <button
            // className="flex h-5 w-5 items-center justify-center rounded-full align-middle    transition-colors hover:bg-hBgHov dark:hover:bg-hBgHovD"
            className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
            onClick={() => onDelete()}
            title="–í–∏–¥–∞–ª–∏—Ç–∏"
          >
            {/* –í–∏–¥–∞–ª–∏—Ç–∏ */}
            <svg
              className="h-5 w-5 text-iconT dark:text-iconTD"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              strokeWidth="2"
              stroke="currentColor"
              fill="none"
              strokeLinecap="round"
              strokeLinejoin="round"
            >
              {" "}
              <path stroke="none" d="M0 0h24v24H0z" /> <line x1="4" y1="7" x2="20" y2="7" />{" "}
              <line x1="10" y1="11" x2="10" y2="17" /> <line x1="14" y1="11" x2="14" y2="17" />{" "}
              <path d="M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12" />{" "}
              <path d="M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3" />
            </svg>
          </button>
        )}

        {/* –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è(—à–µ—Å—Ç–µ—Ä–Ω—è) */}
        {/* <button
           className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
          onClick={() => setIsMenuSetingDrop(!isMenuSetingDrop)}
          title="–í–∏–π—Ç–∏"
        >
          <svg
            className="h-5 w-5 text-iconT dark:text-iconTD"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            strokeWidth="2"
            stroke="currentColor"
            fill="none"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            {" "}
            <path stroke="none" d="M0 0h24v24H0z" />{" "}
            <path d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />{" "}
            <circle cx="12" cy="12" r="3" />
          </svg>
        </button> */}

        {/* –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é */}
        <button
          className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
          onClick={() => setIsTableMenuDroop(!isTableMenuDroop)}
          title="–º–µ–Ω—é"
        >
          <svg
            className="h-5 w-5 text-iconT dark:text-iconTD"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            {" "}
            <line x1="8" y1="6" x2="21" y2="6" /> <line x1="8" y1="12" x2="21" y2="12" />{" "}
            <line x1="8" y1="18" x2="21" y2="18" /> <line x1="3" y1="6" x2="3.01" y2="6" />{" "}
            <line x1="3" y1="12" x2="3.01" y2="12" /> <line x1="3" y1="18" x2="3.01" y2="18" />
          </svg>
        </button>

        {/*–≤—ñ–¥–º–æ–≤–∞(–ø–æ–º–Ω–æ–∂–∏—Ç–∏)  */}
        <button
          className="mx-1 h-7 w-7 relative  flex justify-center items-center dark:text-hTextD rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold  text-hText   hover:bg-hBgHov dark:hover:bg-hBgHovD"
          onClick={onCancel}
          title="–í–∏–π—Ç–∏"
        >
          <svg
            className="h-5 w-5 text-iconT dark:text-iconTD"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            {" "}
            <line x1="18" y1="6" x2="6" y2="18" /> <line x1="6" y1="6" x2="18" y2="18" />
          </svg>
        </button>
      </>
    )
  }
  const THead = () => {
    return (
      <thead
        className={`${styleTableText} sticky top-0  border-b border-tabThBorder bg-tabThBg text-tabThText dark:border-tabThBorderD dark:bg-tabThBgD dark:text-tabThTextD`}
      >
        <tr>
          {/*
          label - –Ω–∞–∑–≤–∞ –ø–æ–ª—è –≤ —à–∞–ø—Ü—ñ
          accessor-—Å–ø—Ä–∞–≤–∂–Ω—è –Ω–∞–∑–≤–∞ –ø–æ–ª—è */}

          {initial–°olumns.map(({ label, accessor, sortable, filtered }) => {
            //  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è className –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è(bg-color+bg-url)
            const clasSort = sortable
              ? sortField === accessor && order === "asc"
                ? "up"
                : sortField === accessor && order === "desc"
                ? "down"
                : "default"
              : ""

            //  –°—Ç–≤–æ—Ä–µ–Ω–Ω—è className –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è(—ñ–∫–æ–Ω–∫–∞ –±—ñ–ª—è –Ω–∞–∑–≤–∏ –≤ —à–∞–ø—Ü—ñ)
            const clasFilter = clasThFilter(accessor)

            return (
              <th
                //whitespace-nowrap-—â–æ–± —Ç–µ–∫—Å—Ç —É –∫–æ–º—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–≤—Å—è
                className={`${styleTableText} border-r dark:border-tabThBorderD border-tabThBorder whitespace-nowrap`}
                key={accessor}
              >
                {/* // uppercase- —Ç–µ–∫—Å—Ç —É –≤–µ—Ä—Ö–Ω—ñ–π —Ä–µ–≥—ñ—Å—Ç—Ä */}
                <div className="flex justify-center text-center align-middle uppercase ">
                  <div className="flex uppercase ">
                    <button className="flex" onClick={sortable ? () => handleSortingChange(accessor) : null}>
                      <p className="px-1"> {label}</p>
                      {clasSort === "up" ? (
                        <span> &#8593;</span>
                      ) : clasSort === "down" ? (
                        <span> &#8595;</span>
                      ) : (
                        clasSort === "default" && ""
                      )}
                    </button>
                  </div>

                  {/* filter */}
                  {typeof filtered !== "undefined" && filtered && (
                    <div className="flex text-center align-middle">
                      {clasFilter && (
                        <svg
                          //   className="h-5 w-5 "
                          className="h-5 w-5 text-iconInfo dark:text-iconInfoD"
                          viewBox="0 0 24 24"
                          fill="none"
                          // fill="currentColor"
                          stroke="currentColor"
                          strokeWidth="2"
                          strokeLinecap="round"
                          strokeLinejoin="round"
                        >
                          <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" />
                        </svg>
                      )}
                    </div>
                  )}
                </div>
              </th>
            )
          })}
        </tr>
      </thead>
    )
  }
  const TRows = () => {
    return (
      <tbody>
        {/* –ø–µ—Ä–µ–±—ñ—Ä —Ä—è–¥–∫—ñ–≤ */}
        {/* slice-—Ü–µ –∫—É—Å–æ–∫ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä—ñ–Ω–≥—É –º–∞—Å–∏–≤—É (—Å—Ç–æ—Ä—ñ–Ω–∫–∞/–≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–µ —ñ...) */}
        {/* {slice.map((row, rowIndex) => ( */}
        {slice.map((row) => (
          <tr
            id={row._nrow} //_nrow- –Ω—É–º–µ—Ä–∞—Ü—ñ—è —Ä—è–¥–∫—ñ–≤/–¥–æ–¥–∞–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–Ω–æ
            key={row._nrow}
            tabIndex={0} // <-- –¥–æ–∑–≤–æ–ª—è—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ —Ñ–æ–∫—É—Å—É–≤–∞—Ç–∏—Å—å –Ω–∞ —Ä—è–¥–æ–∫
            className={`${
              row._selected
                ? "bg-tabTrBgSel hover:bg-tabTrBgSelHov dark:bg-tabTrBgSelD dark:hover:bg-tabTrBgSelHovD"
                : "odd:bg-tabTrBg even:bg-tabTrBgEve hover:bg-tabTrBgHov dark:odd:bg-tabTrBgD dark:even:bg-tabTrBgEveD dark:hover:bg-tabTrBgHovD"
            }`}
            onClick={(e) => selectRows(e)}
            // onKeyDown={(e) => {
            //   if (e.key === "Enter" || e.key === " ") {
            //     e.preventDefault()
            //     selectRows({ target: { id: row._nrow } })
            //   }
            // }}
            onKeyDown={(e) => {
              if (e.key === "Enter" || e.key === " ") {
                e.preventDefault()

                // üîÅ –í–∞–∂–ª–∏–≤–æ! –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä—É, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω—è
                requestAnimationFrame(() => {
                  selectRows({ target: { id: row._nrow.toString() } })
                })
              }
            }}
          >
            {/* –ø–µ—Ä–µ–±—ñ—Ä –ø–æ–ª—ñ–≤ */}
            {initial–°olumns.map(({ accessor, type = "", align = "" }) => {
              //   const tData = accessor === "index" ? rowIndex : row[accessor]
              const tImg = (
                <div
                  id={row._nrow}
                  className="flex justify-center"
                  //   className={`${styleTableImg} flex justify-cente border border-3`}
                >
                  {/* –©–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ Image –∑ –∑–æ–≤–Ω—ñ—à–Ω—ñ–º–∏ url –ü–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ next.config –Ω–∞ –∫–æ–∂–Ω–∏–π —Å–∞–π—Ç –∑ —è–∫–æ–≥–æ —Ç—è–≥–Ω—É—Ç—å—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ */}
                  {/* <Image
                id={row._nrow}
                alt="image"
                // fill
                width={16} //–ù–µ –º—ñ–Ω—è—î—Ç—å—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ —à—Ä–∏—Ñ—Ç—ñ–≤(–≤—ñ–¥ 12-18px)
                height={16} //–ù–µ –º—ñ–Ω—è—î—Ç—å—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ —à—Ä–∏—Ñ—Ç—ñ–≤(–≤—ñ–¥ 12-18px)
                src={row[accessor]}
                // style={{
                //   objectFit: "cover",
                // }}
              /> */}
                  <img id={row._nrow} className={`${styleTableImg}`} src={row[accessor]} alt="Jese image" />
                </div>
              )
              const tData =
                //   type === "boolean" && row[accessor] === "true"
                type === "boolean" && row[accessor] ? (
                  // ? "+"
                  <div id={row._nrow} className="flex justify-center">
                    <svg
                      id={row._nrow}
                      className="h-4 w-4 text-red-500"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      strokeWidth="2"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    >
                      {" "}
                      <polyline points="9 11 12 14 22 4" />{" "}
                      <path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11" />
                    </svg>
                  </div>
                ) : type === "boolean" && !row[accessor] ? (
                  <div id={row._nrow} className="flex justify-center">
                    <svg
                      id={row._nrow}
                      //   className ="h-4 w-4 text-red-500"
                      className={`${styleTableImg}  text-iconT dark:text-iconTD`}
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      strokeWidth="2"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    >
                      {" "}
                      {/* <polyline points="9 11 12 14 22 4" />{" "} */}
                      <path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11" />
                    </svg>
                  </div>
                ) : type === "img" ? (
                  tImg
                ) : (
                  // ) : type === "date" && row[accessor] != null && row[accessor] != undefined ? (
                  //     // row[accessor].substring(0, 10)
                  //     row[accessor]
                  row[accessor]
                )
              const clasTextAlign =
                align == "right"
                  ? "text-right"
                  : align == "center"
                  ? "text-center"
                  : align == "left"
                  ? "text-left"
                  : type == "number"
                  ? "text-right"
                  : type == "date" || type == "boolean" || type == "img"
                  ? "text-center"
                  : "text-left"

              return (
                <td
                  id={row._nrow}
                  key={accessor}
                  //whitespace-nowrap-—â–æ–± —Ç–µ–∫—Å—Ç —É –∫–æ–º—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–≤—Å—è
                  className={`${styleTableText} ${clasTextAlign} text-tabTrText dark:text-tabTrTextD  whitespace-nowrap`}
                >
                  {tData}
                </td>
              )
            })}
          </tr>
        ))}
      </tbody>
    )
  }

  const TFoot = () => {
    return (
      <>
        {/* –ù–∏–∂–Ω—ñ–π —Ä—è–¥–æ–∫ —Å—É–º */}
        {typeof pSeting.pSumRow !== "undefined" && pSeting.pSumRow && (
          <tfoot
            className={`${styleTableText} sticky bottom-0 border-t border-tabThBorder bg-tabThBg text-tabThText dark:border-tabThBorderD dark:bg-tabThBgD dark:text-tabThTextD`}
          >
            <tr>
              {/* <th colSpan="8" className="text-center">
            –í—Å—å–æ–≥–æ
          </th> */}
              {initial–°olumns.map(({ accessor, _nrow, sum, align, type, index }) => {
                const clasFlexJustify =
                  align == "right"
                    ? "justify-end "
                    : align == "center"
                    ? "justify-center"
                    : align == "left"
                    ? "justify-start"
                    : type == "number"
                    ? "justify-end "
                    : type == "date"
                    ? "justify-center"
                    : "justify-start"
                const tIcon =
                  sum === "sum" ? (
                    // suma
                    <svg
                      className="h-5 w-5 text-iconInfo dark:text-iconInfoD"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      strokeWidth="2"
                      stroke="currentColor"
                      fill="none"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    >
                      {" "}
                      <path stroke="none" d="M0 0h24v24H0z" />{" "}
                      <path d="M18 16v2a1 1 0 0 1 -1 1h-11l6-7l-6-7h11a1 1 0 0 1 1 1v2" />
                      <title>suma</title>
                    </svg>
                  ) : sum === "min" ? (
                    <>
                      <svg
                        className="h-5 w-5 text-iconInfo dark:text-iconInfoD"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        strokeWidth="2"
                        stroke="currentColor"
                        fill="none"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      >
                        {" "}
                        <path stroke="none" d="M0 0h24v24H0z" /> <path d="M3 12h7l-3 -3m0 6l3 -3" />{" "}
                        <path d="M21 12h-7l3 -3m0 6l-3 -3" /> <path d="M9 6v-3h6v3" /> <path d="M9 18v3h6v-3" />
                        <title>min</title>
                      </svg>
                    </>
                  ) : sum === "max" ? (
                    <>
                      {/*>max  */}
                      <svg
                        className="h-5 w-5 text-iconInfo dark:text-iconInfoD"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        strokeWidth="2"
                        stroke="currentColor"
                        fill="none"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                      >
                        {" "}
                        <path stroke="none" d="M0 0h24v24H0z" /> <path d="M10 12h-7l3 -3m0 6l-3 -3" />{" "}
                        <path d="M14 12h7l-3 -3m0 6l3 -3" /> <path d="M3 6v-3h18v3" /> <path d="M3 18v3h18v-3" />
                        <title>max</title>
                      </svg>
                    </>
                  ) : sum === "mean" ? (
                    <svg
                      className="h-5 w-5 text-iconInfo dark:text-iconInfoD"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      strokeWidth="2"
                      stroke="currentColor"
                      fill="none"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    >
                      {" "}
                      <path stroke="none" d="M0 0h24v24H0z" /> <circle cx="12" cy="12" r="9" />{" "}
                      <line x1="12" y1="3" x2="12" y2="7" /> <line x1="12" y1="21" x2="12" y2="18" />{" "}
                      <line x1="3" y1="12" x2="7" y2="12" /> <line x1="21" y1="12" x2="18" y2="12" />{" "}
                      <line x1="12" y1="12" x2="12" y2="12.01" />
                      <title>—Å–µ—Ä–µ–¥–Ω—î</title>
                    </svg>
                  ) : (
                    ""
                  )
                return (
                  <th
                    key={accessor}
                    className={`${styleTableText} border-r dark:border-tabThBorderD border-tabThBorder whitespace-nowrap`}
                  >
                    <div
                      id={_nrow}
                      key={accessor}
                      className={`${styleTableText} ${clasFlexJustify} flex items-center text-tabTrText dark:text-tabTrTextD  whitespace-nowrap text-left`}
                    >
                      <p className="flex align-bottom">{tIcon}</p>
                      <p>{sumRow[accessor]}</p>
                    </div>
                  </th>
                )
              })}
            </tr>
          </tfoot>
        )}
      </>
    )
  }

  // –î–ª—è –∫–ª–∞–≤—ñ—à(copilot)useEffect –∑—ñ —Å—Ç—Ä—ñ–ª–∫–∞–º–∏: –ø–µ—Ä–µ–º—ñ—â—É—î–º–æ —Ñ–æ–∫—É—Å
  useEffect(() => {
    const handleKeyDown = (e) => {
      if (e.key !== "ArrowDown" && e.key !== "ArrowUp") return

      setWorkData((prevData) => {
        if (!prevData.length) return prevData

        let currentIndex = prevData.findIndex((r) => r._selected)
        if (currentIndex === -1) currentIndex = 0

        // copilit/–±–º–µ–∂–∏—Ç–∏ –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è –≤–Ω–∏–∑
        const visibleData = slice // –∞–±–æ workData.slice(...), —è–∫—â–æ `slice` –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è

        let newIndex = currentIndex
        const maxIndex = visibleData.length - 1
        if (e.key === "ArrowDown" && currentIndex < maxIndex) {
          newIndex = currentIndex + 1
        }
        //
        if (e.key === "ArrowUp" && currentIndex > 0) {
          newIndex = currentIndex - 1
        }

        const newRow = prevData[newIndex]
        const newNRow = newRow._nrow

        const updatedData = prevData.map((row) => ({
          ...row,
          _selected: row._nrow === newNRow,
        }))

        // —Ç–∞–∫–æ–∂ –æ–Ω–æ–≤–ª—é—î–º–æ selectedRows (—Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω –≤–∏–±—Ä–∞–Ω–∏–π)
        setSelectedRows([newNRow])

        // –°–∫—Ä–æ–ª–∏—Ç–∏ –¥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä—è–¥–∫–∞
        setTimeout(() => {
          const targetRow = document.getElementById(newNRow)
          const wrapper = tableWrapperRef.current

          if (targetRow && wrapper) {
            const canScroll = wrapper.scrollHeight > wrapper.clientHeight

            if (canScroll) {
              targetRow.scrollIntoView({
                behavior: "smooth", // –∞–±–æ 'auto', —è–∫—â–æ –±–µ–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó
                block: "center", // –∞–±–æ 'nearest' / 'start'
              })
            }
          }
        }, 10)

        return updatedData
      })

      e.preventDefault()
    }

    window.addEventListener("keydown", handleKeyDown)
    return () => window.removeEventListener("keydown", handleKeyDown)
  }, [workData])

  //-------------------------------------------------
  return (
    //align-middle-—Ç–µ–∫—Å—Ç –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω—ñ
    <div className={`${styleTableText} px-0 align-middle bg-bodyBg dark:bg-bodyBgD`}>
      {typeof p_title !== "undefined" && p_title.length > 0 && (
        <div className="flex justify-center text-center items-center rounded-3xl align-middle border border-tabThBorder dark:border-tabThBorderD font-bold bg-hBg text-hText  dark:bg-hBgD">
          {/* title */}
          <h1 className={`${styleTitleText}  text-center  `}>{p_title}</h1>
        </div>
      )}
      {/* –ù–∞–¥–±—É–¥–æ–≤–∞ —Ç–∞–±–ª–∏—Ü—ñ –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è (–ø–æ—à—É–∫+...) */}
      <TOverHead />

      {/* Dropdown menu */}
      {isDropdownFilter && (
        <DropdownFilter
          filterData={filterData} //–î–∞–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä—É(—Ç—ñ–ª—å–∫–∏ —Ç—ñ –ø–æ–ª—è –ø–æ —è–∫–∏—Ö –∑–∞–¥–∞–Ω–æ )
          setFilterData={setFilterData}
          setIsDropdownFilter={setIsDropdownFilter}
          styleTableText={styleTableText}
          applyFilters={applyFilters} //–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä
          deleteFilterAll={deleteFilterAll}
          filteredState={filteredState} //–©–æ —É —Ñ—ñ–ª—å—Ç—Ä—ñ —î –Ω–µ–ø—É—Å—Ç—ñ –∑–∞–ø–∏—Å–∏
          setFilteredState={setFilteredState} //–©–æ —É —Ñ—ñ–ª—å—Ç—Ä—ñ —î –Ω–µ–ø—É—Å—Ç—ñ –∑–∞–ø–∏—Å–∏
        />
      )}
      {/* Dropdown <TableMenuDroop */}
      {isTableMenuDroop && (
        <TableMenuDroop
          setIsTableMenuDroop={setIsTableMenuDroop}
          fAction={fAction}
          setPSeting={setPSeting}
          pSeting={pSeting}
          tableFontSize={tableFontSize}
          setTableFontSize={setTableFontSize}
        />
      )}
      {/* –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è(—à–µ—Å—Ç–µ—Ä–Ω—è) */}
      {/* Dropdown MenuSetingDrop
      {isMenuSetingDrop && (
        <MenuSetingDrop setIsMenuSetingDrop={setIsMenuSetingDrop} setPSeting={setPSeting} pSeting={pSeting} />
      )} */}
      {/* –û–±–≥–æ—Ä—Ç–∫–∞(Wraper)—Ç–∞–±–ª–∏—Ü—ñ (–¥–ª—è –ø—Ä–æ–æ–∫—Ä—É—Ç–∫–∏ —ñ...)   border-3 border-green-300 */}
      <div
        ref={tableWrapperRef}
        className="scroll-wrapper max-h-[--sH] w-full overflow-auto border border-tabThBorder dark:border-tabThBorderD pb-4"
        style={{ "--sH": "calc(100vh - 200px)" }}
      >
        {/*border-collapse- –æ–±—î–¥–Ω–∞–Ω–Ω—è –≥—Ä–∞–Ω–∏—Ü—å —è—á–µ–π–æ–∫ "> */}
        <table id="example" className=" w-full table-auto">
          {/*–®–∞–ø–∫–∞ */}
          <THead />
          {/* —Ä—è–¥–∫–∏ */}
          <TRows />
          {/* –ù–∏–∂–Ω—ñ–π —Ä—è–¥–æ–∫ —Å—É–º */}
          <TFoot />
        </table>
      </div>
      {/* footer */}
      <TableFooter
        range={range}
        slice={slice}
        setPage={setPage}
        page={page}
        rowsPerPage={rowsPerPage}
        setRowsPerPage={setRowsPerPage}
        maxRow={workData.length}
      />
    </div>
  )
}
